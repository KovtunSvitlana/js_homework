// Операція додавання рядка до числа
const result1 = "number" + 3 + 3;
// Крок 1: 'number' + 3 -> 'number3' (перетворення числа 3 на рядок і конкатенація)
// Крок 2: 'number3' + 3 -> 'number33' (перетворення числа 3 на рядок і конкатенація)
// Результат: 'number33'

// Операція віднімання рядка від числа
const result2 = null + 3;
// Крок 1: null перетворюється на 0
// Крок 2: 0 + 3 -> 3
// Результат: 3

// Операція логічного І
const result3 = 5 && "qwerty";
// Крок 1: 5 є істинним значенням, тому повертається друге значення "qwerty"
// Результат: "qwerty"

// Операція додавання чисел та рядка
const result4 = +"40" + +"2" + "hillel";
// Крок 1: +'40' перетворюється на число 40
// Крок 2: +'2' перетворюється на число 2
// Крок 3: 40 + 2 -> 42
// Крок 4: 42 + "hillel" -> '42hillel' (перетворення числа на рядок і конкатенація)
// Результат: '42hillel'

// Операція віднімання з порівнянням
const result5 = "10" - 5 === 6;
// Крок 1: '10' перетворюється на число 10
// Крок 2: 10 - 5 -> 5
// Крок 3: 5 === 6 -> false (порівняння)
// Результат: false

// Операція додавання булевих значень
const result6 = true + false;
// Крок 1: true перетворюється на 1
// Крок 2: false перетворюється на 0
// Крок 3: 1 + 0 -> 1
// Результат: 1

// Операція віднімання рядка з одиницями вимірювання
const result7 = "4px" - 3;
// Крок 1: '4px' не може бути перетворений на число
// Крок 2: Результат NaN (Not a Number)
// Результат: NaN

// Операція віднімання рядка без одиниць вимірювання
const result8 = "4" - 3;
// Крок 1: '4' перетворюється на число 4
// Крок 2: 4 - 3 -> 1
// Результат: 1

// Операція додавання рядка та числа
const result9 = "6" + 3 ** 0;
// Крок 1: 3 ** 0 -> 1 (степінь числа)
// Крок 2: '6' + 1 -> '61' (перетворення числа на рядок і конкатенація)
// Результат: '61'

// Операція ділення числа на рядок
const result10 = 12 / "6";
// Крок 1: '6' перетворюється на число 6
// Крок 2: 12 / 6 -> 2
// Результат: 2

// Операція додавання рядка та булевого значення
const result11 = "10" + (5 === 6);
// Крок 1: 5 === 6 -> false
// Крок 2: '10' + false -> '10false' (перетворення false на рядок і конкатенація)
// Результат: '10false'

// Операція порівняння null та порожнього рядка
const result12 = null == "";
// Крок 1: null та '' не є рівними
// Результат: false

// Операція піднесення до степеня
const result13 = 3 ** (9 / 3);
// Крок 1: 9 / 3 -> 3
// Крок 2: 3 ** 3 -> 27 (степінь числа)
// Результат: 27

// Операція порівняння булевих значень
const result14 = !!"false" == !!"true";
// Крок 1: !!'false' -> true (рядок є істинним значенням)
// Крок 2: !!'true' -> true (рядок є істинним значенням)
// Крок 3: true == true -> true
// Результат: true

// Операція логічного АБО та І
const result15 = 0 || ("0" && 1);
// Крок 1: 0 є хибним значенням, тому виконується перевірка '0' && 1
// Крок 2: '0' є істинним значенням, тому повертається значення 1
// Результат: 1

// Операція порівняння з булевими значеннями
const result16 = (+null == false) < 1;
// Крок 1: +null -> 0 (перетворення null на число)
// Крок 2: 0 == false -> true (порівняння)
// Крок 3: true < 1 -> true (true перетворюється на 1, 1 < 1 -> false, але тут йде порівняння результату)
// Результат: true

// Операція логічного І та АБО
const result17 = (false && true) || true;
// Крок 1: false && true -> false (логічне І)
// Крок 2: false || true -> true (логічне АБО)
// Результат: true

// Операція логічного І та АБО з дужками
const result18 = false && (false || true);
// Крок 1: false || true -> true (логічне АБО)
// Крок 2: false && true -> false (логічне І)
// Результат: false

// Операція порівняння з булевими значеннями та степенем
const result19 = (+null == false) < 1 ** 5;
// Крок 1: +null -> 0 (перетворення null на число)
// Крок 2: 0 == false -> true (порівняння)
// Крок 3: 1 ** 5 -> 1 (степінь числа)
// Крок 4: true < 1 -> true (true перетворюється на 1, 1 < 1 -> false, але тут йде порівняння результату)
// Результат: true
